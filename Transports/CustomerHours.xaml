<Window x:Class="Transports.CustomerHours"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:model="clr-namespace:Bussiness.Layer.Model;assembly=Bussiness.Layer"
        xmlns:local="clr-namespace:Transports.Converters"
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        mc:Ignorable="d"
        Title="GESTIÓN DE CLIENTES Y HORARIOS" WindowStartupLocation="CenterScreen" FontSize="15" Icon="Images/Icon.ico">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Transports;component/Resources/Styles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <local:HourVisibilityConverter x:Key="HourVisibilityConverter"/>
            <ObjectDataProvider x:Key="DaysOfWeek" MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="model:DaysOfWeek"/>
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <!--<CollectionViewSource x:Key="SortedClients" Source="{Binding Customers}">
                <CollectionViewSource.SortDescriptions>
                    <scm:SortDescription PropertyName="Name" Direction="Ascending" />
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>-->
        </ResourceDictionary>
    </Window.Resources>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width=".4*"/>
            <ColumnDefinition Width="50"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition/>
            <RowDefinition Height="50"/>
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>
        <TextBlock Text="LISTADO DE CLIENTES" FontWeight="Bold" TextAlignment="Center" VerticalAlignment="Center"/>
        <Grid Grid.ColumnSpan="3" Grid.RowSpan="4" Background="LightGray" Panel.ZIndex="2" Visibility="{Binding StateVisibility}">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Row="1" Grid.Column="1">
                <TextBlock Text="Nombre:" Margin="0 5" FontWeight="Bold"/>
                <TextBox Text="{Binding CustomerSelected.Name, UpdateSourceTrigger=PropertyChanged}" Margin="0 0 0 5" FontSize="18"/>
                <Button Width="100" Command="{Binding UpdateCustomerCommand}" Margin="0 5 0 0">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="Images/icon-update.ico" Height="18"/>
                        <TextBlock Text="Modificar" FontWeight="Bold"/>
                    </StackPanel>
                </Button>
                <Button Width="100" Margin="0 10" Command="{Binding CancelUpdateCommand}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="Images/cancel.ico" Height="18"/>
                        <TextBlock Text="Cancelar" FontWeight="Bold"/>
                    </StackPanel>
                </Button>
            </StackPanel>
        </Grid>
        <StackPanel Grid.Row="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width=".2*"/>
                    <ColumnDefinition Width=".8*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="Buscar: " VerticalAlignment="Center" Margin="0 0 0 3" FontWeight="Bold"/>
                <TextBox Grid.Column="2" x:Name="txtSearch" Margin="3 5 0 5" TextChanged="txtSearch_TextChanged"/>
            </Grid>
            <ListBox x:Name="listBox" Grid.Row="1" Grid.RowSpan="2" HorizontalContentAlignment="Stretch" SelectedItem="{Binding CustomerSelected}">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Border BorderBrush="Gray" BorderThickness="1" Margin="-3 0" CornerRadius="3">
                            <TextBlock Text="{Binding Name}" Margin="5 3"/>
                        </Border>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <ListBox.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Modificar" Command="{Binding OpenUpdateCommand}"/>
                        <MenuItem Header="Eliminar" Command="{Binding DeleteCustomerCommand}"/>
                    </ContextMenu>
                </ListBox.ContextMenu>
            </ListBox>
        </StackPanel>
        <Grid Grid.Row="3" Height="35">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width=".6*"/>
                <ColumnDefinition Width=".4*"/>
            </Grid.ColumnDefinitions>
            <TextBox x:Name="TxtName" Margin="3" Visibility="{Binding IsEditing}">
                <TextBox.Text>
                    <Binding Path="Name" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <local:StringEmptyValidation ValidatesOnTargetUpdated="True"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <Button Grid.Column="1" Margin="3 3 0 3" Command="{Binding AddCustomerCommand}">
                <StackPanel Orientation="Horizontal">
                    <Image Source="Images/add.ico" Height="18"/>
                    <TextBlock Text="Agregar" FontWeight="Bold"/>
                </StackPanel>
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="IsEnabled" Value="False"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=TxtName, Path=(Validation.HasError)}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>
        <Border Grid.Column="2" BorderBrush="Black" BorderThickness="1" Margin="2">
            <TextBlock Text="{Binding CustomerSelected.Name, StringFormat='Horarios de {0}'}" HorizontalAlignment="Center" FontSize="18" Foreground="Black"/>
        </Border>
        <DataGrid Grid.Row="1" Grid.Column="2" AutoGenerateColumns="False" CanUserDeleteRows="False" CanUserAddRows="False" ItemsSource="{Binding CustomerSelected.Hours}" SelectedItem="{Binding SelectedHour, UpdateSourceTrigger=PropertyChanged}">
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="DIA" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox Grid.Column="3" ItemsSource="{Binding Source={StaticResource DaysOfWeek}}" SelectedValue="{Binding DayOfWeek, UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="LUGAR" Width="*" Binding="{Binding Place, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="ENTRADA" Width="*" Binding="{Binding EntryTime, UpdateSourceTrigger=PropertyChanged}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="SALIDA" Width="*" Binding="{Binding ExitTime, UpdateSourceTrigger=PropertyChanged}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTemplateColumn Width="100">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Command="{Binding Path=DataContext.UpdateHourCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}">
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="Images/icon-update.ico" Width="18"/>
                                    <TextBlock Text="Actualizar"/>
                                </StackPanel>
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <Grid Grid.Row="2" Grid.Column="2" Margin="0 3" Height="30">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <ComboBox x:Name="CboxDayOfWeek" ItemsSource="{Binding Source={StaticResource DaysOfWeek}}" SelectedIndex="{Binding IndexDay}" SelectedValue="{Binding Hour.DayOfWeek}"/>
            <TextBox Grid.Column="1" Margin="4 0 2 0" x:Name="TxtPlace" Visibility="{Binding IsEditing}">
                <TextBox.Text>
                    <Binding Path="Hour.Place" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <local:StringEmptyValidation ValidatesOnTargetUpdated="True"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBox Grid.Column="2" Margin="2 0 2 0" x:Name="TxtEntryTime" TextAlignment="Center" Visibility="{Binding IsEditing}">
                <TextBox.Text>
                    <Binding Path="Hour.EntryTime" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <local:HourValidation ValidatesOnTargetUpdated="True"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBox Grid.Column="3" Margin="2 0 2 0" x:Name="TxtExitTime" TextAlignment="Center" Visibility="{Binding IsEditing}">
                <TextBox.Text>
                    <Binding Path="Hour.ExitTime" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <local:HourValidation ValidatesOnTargetUpdated="True"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
        </Grid>
        <Button Grid.Row="3" Grid.Column="2" Width="130" Height="35" Command="{Binding Path=DataContext.DeleteHourCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}">
            <StackPanel Orientation="Horizontal">
                <Image Source="Images/icon-delete.ico" Width="18"/>
                <TextBlock Text="Eliminar" FontWeight="Bold"/>
            </StackPanel>
        </Button>
        <Button Grid.Row="3" Grid.Column="2" Width="150" Height="35" Margin="0 0 5 0" HorizontalAlignment="Right" Command="{Binding AddHourCommand}">
            <StackPanel Orientation="Horizontal">
                <Image Source="Images/add.ico" Height="18"/>
                <TextBlock Text="Agregar horario" FontWeight="Bold"/>
            </StackPanel>
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="IsEnabled" Value="False"/>
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=TxtPlace, Path=(Validation.HasError)}" Value="False"/>
                                <Condition Binding="{Binding ElementName=TxtEntryTime, Path=(Validation.HasError)}" Value="False"/>
                                <Condition Binding="{Binding ElementName=TxtExitTime, Path=(Validation.HasError)}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsEnabled" Value="True"/>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
    </Grid>
</Window>
